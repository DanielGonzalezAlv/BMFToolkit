function model = fnc_jointCoord_TalusR (model,DoF_Types)
% Bone Mesh Female Toolkit 
% Licensed under the zlib license. See LICENSE for more details.

RFt1MA = model(26).vertices_global(model(26).LandmarkIndices(1),:);
RFt5MA = model(34).vertices_global(model(34).LandmarkIndices(1),:);

% Talocrural Positive Y axis
talocrural_r_pointMedial =...
    model(8).vertices_global(model(8).LandmarkIndices(3),:);
talocrural_r_pointLateral =...
    model(10).vertices_global(model(10).LandmarkIndices(3),:);
jointCenter_talocruralR_global =...
    mean([talocrural_r_pointLateral; talocrural_r_pointMedial]);
vec_OY_talocrural = talocrural_r_pointMedial - talocrural_r_pointLateral;
vec_OY_talocrural = vec_OY_talocrural./norm(vec_OY_talocrural);
model(12).vec_OY_talocruralR = vec_OY_talocrural;
vec_in_Talocrural_XY_plane = jointCenter_talocruralR_global -...
    mean([RFt1MA;RFt5MA]);
vec_in_Talocrural_XY_plane =...
    vec_in_Talocrural_XY_plane./norm(vec_in_Talocrural_XY_plane);
model(12).vec_in_Talocrural_XY_plane = vec_in_Talocrural_XY_plane;
% Talocrural Positive Z axis
vec_OZ_talocrural = cross(vec_OY_talocrural,vec_in_Talocrural_XY_plane);
vec_OZ_talocrural = vec_OZ_talocrural./norm(vec_OZ_talocrural);
% Talocrural Positive X axis
vec_OX_talocrural = cross(vec_OY_talocrural, vec_OZ_talocrural);
vec_OX_talocrural = vec_OX_talocrural./norm(vec_OX_talocrural);
% Column-major rotation matrix from unit vectors
jointAxes_talocruralR_global       = [[vec_OX_talocrural';0]...
    [vec_OY_talocrural';0] [vec_OZ_talocrural';0]...
    [jointCenter_talocruralR_global';1]];
jointAxes_talocruralR_in_tibiaR =...
    [[jointAxes_talocruralR_global(1:3,1:3)'*...
    model(8).joint_axes_global(1:3,1:3)] ...
    [jointCenter_talocruralR_global'-...
    model(8).joint_axes_global(1:3,4)]; 0 0 0 1];
model(12).joint_axes_global        = jointAxes_talocruralR_global;
model(12).joint_axes_local         = jointAxes_talocruralR_in_tibiaR;
model(12).parentID                 = 8;
model(12).joint                    = DoF_Types.DoF_YROT;
model(12).vertices_centered  = model(12).vertices_global -...
    repmat(median(model(12).vertices_global),...
    length(model(12).vertices_global), 1);
model(12).mesh_offset = [max(model(12).vertices_centered(:,1))*0.7...
    max(model(12).vertices_centered(:,2))*0.5...
    max(model(12).vertices_centered(:,3))*0.15];