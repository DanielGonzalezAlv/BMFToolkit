function model = fnc_jointCoord_PelvisL (model, DoF_Types)
% Bone Mesh Female Toolkit 
% Licensed under the zlib license. See LICENSE for more details.

SARSN = model(1).vertices_global(model(1).LandmarkIndices(3),:);
jointCenter_pelvisL_x = SARSN(1);
jointCenter_pelvisL_y = -SARSN(2)*1.5;
jointCenter_pelvisL_z = SARSN(3)*0.5;
jointCenter_pelvisL_global = [jointCenter_pelvisL_x ...
    jointCenter_pelvisL_y jointCenter_pelvisL_z];
jointAxes_pelvisL_global = [model(1).joint_axes_global(1:3,1:3) ...
    jointCenter_pelvisL_global'; 0 0 0 1];
% Relative transformation matrix
% P^2_1 = [R'_2 * R_1 t_12; 0 1], where t_12 = t^2_1 - t^2_2
rel_center = [model(1).joint_axes_global(1:3,1:3)'*...
    jointCenter_pelvisL_global'-...
    model(1).joint_axes_global(1:3,4)];
jointAxes_pelvisL_in_Sacrum = [[jointAxes_pelvisL_global(1:3,1:3)'*...
    model(1).joint_axes_global(1:3,1:3)] rel_center; 0 0 0 1];
model(3).joint_axes_local   = jointAxes_pelvisL_in_Sacrum;
model(3).joint_axes_global  = jointAxes_pelvisL_global;
model(3).parentID           = 1;
model(3).joint              = [];
model(3).vertices_centered  = model(3).vertices_global - ...
    repmat(median(model(3).vertices_global),...
    length(model(3).vertices_global), 1);
model(3).mesh_offset = [-min(model(3).vertices_centered(:,1))*0.5 ...
    max(model(3).vertices_centered(:,2))*0.32...
    min(model(3).vertices_centered(:,3))*0.35];